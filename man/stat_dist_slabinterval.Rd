% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_dist_slabinterval.R
\name{stat_dist_slabinterval}
\alias{stat_dist_slabinterval}
\alias{stat_dist_halfeye}
\alias{stat_dist_halfeyeh}
\alias{stat_dist_eye}
\alias{stat_dist_eyeh}
\alias{stat_dist_ccdfbar}
\alias{stat_dist_ccdfbarh}
\alias{stat_dist_cdfbar}
\alias{stat_dist_cdfbarh}
\title{Distribution + interval plots (eye plots, half-eye plots, CCDF barplots, etc) for analytical distributions (ggplot stat)}
\usage{
stat_dist_slabinterval(mapping = NULL, data = NULL,
  geom = "slabinterval", position = "identity", ...,
  slab_type = c("pdf", "cdf", "ccdf"), p_limits = c(0.001, 0.999),
  orientation = c("vertical", "horizontal"), limits = NULL, n = 501,
  .width = c(0.66, 0.95), show_slab = TRUE, show_interval = TRUE,
  na.rm = FALSE, show.legend = c(size = FALSE), inherit.aes = TRUE)

stat_dist_halfeye(...)

stat_dist_halfeyeh(..., orientation = "horizontal")

stat_dist_eye(..., side = "both")

stat_dist_eyeh(..., side = "both", orientation = "horizontal")

stat_dist_ccdfbar(..., slab_type = "ccdf", justification = 0.5,
  side = "left", normalize = "none")

stat_dist_ccdfbarh(..., slab_type = "ccdf", justification = 0.5,
  side = "top", orientation = "horizontal", normalize = "none")

stat_dist_cdfbar(..., slab_type = "cdf", justification = 0.5,
  side = "left", normalize = "none")

stat_dist_cdfbarh(..., slab_type = "cdf", justification = 0.5,
  side = "top", orientation = "horizontal", normalize = "none")
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{geom}{Use to override the default connection between
\code{stat_slabinterval} and \code{\link{geom_slabinterval}}}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed to \code{\link{layer}}. They may also be arguments to the paired geom
(e.g., \code{\link{geom_pointinterval}})}

\item{slab_type}{The type of slab function to calculate: probability density (or mass) function (\code{"pdf"}),
cumulative distribution function (\code{"cdf"}), or complementary CDF (\code{"ccdf"}).}

\item{p_limits}{Probability limits (as a vector of size 2) used to determine the lower and upper
limits of the slab. E.g., if this is \code{c(.001, .999)} (the default), then a slab is drawn
for the distribution from the quantile at \code{p = .001} to the quantile at \code{p = .999}.}

\item{orientation}{Whether this geom is drawn horizontally (\code{"horizontal"}) or
vertically (\code{"vertical"}). When horizontal (resp. vertical), the geom uses the \code{y} (resp. \code{x})
aesthetic to identify different groups, then for each group uses the \code{x} (resp. \code{y}) aesthetic and the
\code{thickness} aesthetic to draw a function as an slab, and draws points and intervals horizontally
(resp. vertically) using the \code{xmin}, \code{x}, and \code{xmax} (resp. \code{ymin}, \code{y}, and \code{ymax})
aesthetics.}

\item{limits}{Manually-specified limits for the slab, as a vector of length two. These limits are combined with those
computed based on \code{p_limits} as well as the limits defined by the scales of the plot to determine the
limits used to draw the slab functions: these limits specify the maximal limits; i.e., if specified, the limits
will not be wider than these (but may be narrower).Use \code{NA} to leave a limit alone; e.g.
\code{limits = c(0, NA)} will ensure that the lower limit does not go below 0, but let the upper limit
be determined by either \code{p_limits} or the scale settings.}

\item{n}{Number of points at which to evaluate \code{slab_function}}

\item{.width}{The \code{.width} argument passed to \code{interval_function} or \code{point_interval}.}

\item{show_slab}{Should the slab portion of the geom be drawn? Default \code{TRUE}.}

\item{show_interval}{Should the interval portion of the geom be drawn? Default \code{TRUE}.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with a warning. If \code{TRUE}, missing
values are silently removed.}

\item{show.legend}{Should this layer be included in the legends? Default is \code{c(size = FALSE)}, unlike most geoms,
to match its common use cases. \code{FALSE} hides all legends, \code{TRUE} shows all legends, and \code{NA} shows only
those that are mapped (the default for most geoms).}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}

\item{side}{Which side to draw the slab on. \code{"topright"}, \code{"top"}, and \code{"right"} are synonyms
which cause the slab to be drawn on the top or the right depending on if \code{orientation} is \code{"horizontal"}
or \code{"vertical"}. \code{"bottomleft"}, \code{"bottom"}, and \code{"left"} are synonyms which cause the slab
to be drawn on the bottom of the left depending on if \code{orientation} is \code{"horizontal"} or
\code{"vertical"}. \code{"both"} draws the slab mirrored on both sides (as in a violin plot).}

\item{justification}{Justification of the interval relative to the slab, where \code{0} indicates bottom/left
justification and \code{1} indicates top/right justification (depending on \code{orientation}). If \code{justification}
is \code{NULL} (the default), then it is set automatically based on the value of \code{side}: when \code{side} is
\code{"top"}/\code{"right"} \code{justification} is set to \code{0}, when \code{side} is \code{"bottom"}/\code{"left"}
\code{justification} is set to \code{1}, and when \code{side} is \code{"both"} \code{justification} is set to
\code{0.5}.}

\item{normalize}{How to normalize heights of functions input to the \code{thickness} aesthetic. If \code{"max_height"}
(the default), normalize so that the maximum height across all data is \code{1}; if \code{"height"}, normalize within
groups so that the maximum height in each group is \code{1}; if \code{"none"}, values are taken as is with no
 normalization (this should probably only be used with functions whose values are in [0,1]).}
}
\description{
Stats for computing distribution functions (densities or CDFs) + intervals for use with
\code{\link{geom_slabinterval}}. Uses \code{dist} aesthetic to specify a distribution name
and \code{arg1}, ... \code{arg9} aesthetics (or \code{args} as a list column) to specify distribution
arguments.
}
\details{
A highly configurable stat for generating a variety of plots that combine a "slab"
that describes a distribution plus an interval. Several "shortcut" stats are provided
which combine multiple options to create useful geoms, particularly \emph{eye plots}
(a combination of a violin plot and interval), \emph{half-eye plots} (a density plus interval),
and \emph{CCDF bar plots} (a complementary CDF plus interval).

The shortcut stat names follow the pattern \code{stat_dist_[name][h|]}, where the trailing
\code{h} (if present) indicates the horizontal version of the stat.

Stats include:

\itemize{
  \item \code{stat_dist_eye} / \code{stat_dist_eyeh}: Eye plots (violin + interval)
  \item \code{stat_dist_halfeye} / \code{stat_dist_halfeyeh}: Half-eye plots (density + interval)
  \item \code{stat_dist_ccdfbar} / \code{stat_dist_ccdfbarh}: CCDF bar plots (CCDF + interval)
  \item \code{stat_dist_cdfbar} / \code{stat_dist_cdfbarh}: CDF bar plots (CDF + interval)
}

These stats expect a \code{dist} aesthetic to specify a distribution name
and \code{arg1}, ... \code{arg9} aesthetics (or \code{args} as a list column) to specify distribution
arguments. Distribution names should correspond to R functions that have \code{"p"}, \code{"q"}, and
\code{"d"} functions; e.g. \code{"norm"} is a valid distribution name because R defines the
\code{\link{pnorm}}, \code{\link{qnorm}}, and \code{\link{dnorm}} functions for Normal distributions.

See the \code{\link{parse_dist}} function for a useful way to generate \code{dist} and \code{args}
values from human-readable distribution specs (like \code{"normal(0,1)"}). Such specs are also
produced by other packages (like the \code{\link[brms]{get_prior}} function in brms); thus,
\code{\link{parse_dist}} combined with the stats described here can help you visualize the output
of those functions.
}
\examples{

#TODO

}
\seealso{
See \code{\link{geom_slabinterval}} for more information on the geom these stats
use by default and some of the options they have. See \code{\link{stat_sample_slabinterval}}
for the versions of these stats that can be used on samples.
}
