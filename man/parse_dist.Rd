% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parse_dist.R
\name{parse_dist}
\alias{parse_dist}
\title{Parse distribution specifications into columns of a data frame}
\usage{
parse_dist(object, ..., dist = ".dist", args = ".args",
  to_r_names = TRUE)
}
\arguments{
\item{object}{A character vector containing distribution specifiations or a data frame with a column
containing distribution specifications.}

\item{...}{Arguments passed to other implementations of \code{parse_dist}.}

\item{dist}{The name of the output column to contain the distribution name}

\item{args}{The name of the output column to contain the arguments to the distribution}

\item{to_r_names}{If \code{TRUE} (the default), certain common aliases for distribution names are
automatically translated into names that R can recognize (i.e., names which have functions starting
with \code{r}, \code{p}, \code{q}, and \code{d} representing random number generators, distribution
functions, etc. for that distribution). For example, \code{"normal"} is translated into \code{"norm"}
and \code{"lognormal"} is translated into \code{"lnorm"}.}

\item{dist_col}{A bare (unquoted) column or column expression that resolves to a character vector
of distribution specifications.}
}
\description{
Parses simple string distribution specifications, like \code{"normal(0, 1)"}, into two columns of
a data frame, suitable for use with \code{\link{stat_distinterval}}. This format is output
by \code{\link[brms]{get_prior}}, making it particularly useful for visualizing priors from
brms models.
}
\examples{

library(dplyr)

# parse dist can operate on strings directly...
parse_dist(c("normal(0,1)", "student_t(3,0,1)"))

# ... or on columns of a data frame, where it adds the
# parsed specs back on as columns
data.frame(prior = c("normal(0,1)", "student_t(3,0,1)")) \%>\%
  parse_dist(prior)

if (
  require("brms", quietly = TRUE)
) {

  # parse_dist is particularly useful with brms prior specifications,
  # which follow the same format...

  # get priors for a brms model
  priors = get_prior(mpg ~ log(hp), data = mtcars, family = lognormal)

  # The `prior` column output by `get_prior()` is a character vector
  # of distribution specifications. We can parse this directly...
  parse_dist(priors$prior)

  # ... or we can parse it and have it added back onto the original data frame
  # (this form is likely more useful for plotting, since the other columns
  # are retained)
  parse_dist(priors, prior)

}

}
\seealso{
See \code{\link{stat_distinterval}}, which can easily make use of the output of this function
using the \code{dist} and \code{args} aesthetics.
}
