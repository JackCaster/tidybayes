% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_slabinterval.R
\name{stat_slabinterval}
\alias{stat_slabinterval}
\title{Compute slab functions and interval functions (ggplot stat)}
\usage{
stat_slabinterval(mapping = NULL, data = NULL, geom = "slabinterval",
  position = "identity", ..., orientation = c("horizontal",
  "vertical"), slab_function = NULL, slab_args = list(),
  limits = NULL, n = 101, interval_function = NULL,
  interval_args = list(), point_interval = NULL, .width = c(0.66,
  0.95), na.rm = FALSE, show.legend = NA, inherit.aes = TRUE)
}
\arguments{
\item{mapping}{The aesthetic mapping, usually constructed with
\code{\link{aes}} or \code{\link{aes_string}}. Only needs to be set at the
layer level if you are overriding the plot defaults.}

\item{data}{A layer specific dataset - only needed if you want to override
the plot defaults.}

\item{geom}{Use to override the default connection between
\code{geom_pointinterval}/\code{geom_pointintervalh} and \code{stat_pointinterval}/\code{stat_pointintervalh}.}

\item{position}{The position adjustment to use for overlapping points on this layer.}

\item{...}{Other arguments passed to \code{\link{layer}}. They may also be arguments to the paired geom.}

\item{point_interval}{A function from the \code{\link{point_interval}} family (e.g., \code{median_qi}, \code{mean_qi}, etc).
This function should obey the
\code{.width} and \code{.simple_names} parameters of \code{\link{point_interval}} functions, such that when given
a vector with \code{.simple_names = TRUE} should return a data frame with variables \code{.value}, \code{.lower},
\code{.upper}, and \code{.width}. Output will be converted to the appropriate \code{x}- or \code{y}-based aesthetics
depending on the value of \code{orientation}. See the \code{\link{point_interval}} family of functions for
more information.}

\item{.width}{The \code{.width} argument passed to \code{point_interval}.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with a warning. If \code{TRUE}, missing
values are silently removed.}

\item{show.legend}{Should this layer be included in the legends? Default is \code{c(size = FALSE)}, unlike most geoms,
to match its common use cases. \code{FALSE} hides all legends, \code{TRUE} shows all legends, and \code{NA} shows only
those that are mapped (the default for most geoms).}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics, rather than combining with them. This is
most useful for helper functions that define both data and aesthetics and shouldn't inherit behavior from the
default plot specification, e.g. borders.}

\item{fun.data}{Similar to \code{point_interval}, for compatibility with \code{stat_summary}.
Note: if the summary function is passed using \code{fun.data}, the \code{x} and \code{y}-based aesthetics
are not converted to the correct form automatically.}

\item{.prob}{Deprecated. Use \code{.width} instead.}

\item{fun.args}{Other optional arguments passed to \code{fun.data}.}
}
\description{
A combination of \code{\link{stat_summary}} / \code{\link{stat_summaryh}} and
\code{\link{geom_pointinterval}} / \code{\link{geom_pointintervalh}} with sensible defaults.
While the corresponding \code{geom}s are intended for use on
data frames that have already been summarized using a \code{\link{point_interval}}
function, these \code{stat}s are intended for use directly on data frames of draws, and
will perform the summarization using a \code{\link{point_interval}} function.
}
\examples{

#TODO

}
\seealso{
See \code{\link{geom_pointinterval}} / \code{\link{geom_pointintervalh}} for the geom versions, intended
for use on points and intervals that have already been summarized using a \code{\link{point_interval}} function.
See \code{\link{stat_interval}} / \code{\link{stat_intervalh}} for a similar stat intended for intervals without
point summaries.
}
